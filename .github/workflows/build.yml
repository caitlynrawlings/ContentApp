# This is a basic workflow to help you get started with Actions

name: Sync Google Sheet Page Info

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
          uses: actions/checkout@v2

      # Runs commands using the runners shell
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r parse/requirements.txt
      - name: Config git user
        run: |
          git config --local user.name  ${{ github.actor }}        
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create preview branch
          run: |
            # Copy files from preview branch
            git fetch origin
            git checkout preview
            git reset --hard origin/main
      - name: Sync with google sheet changes
        env:
          SHEETS_API: ${{ secrets.SHEETS_API_TOKEN }}        
        run: |
          python3 parse/main.py
      - name: Commit files  # transfer the new html files back into the repository
        run: |
          git add ./assets
          git commit -m "Updating downloaded files"
          git push origin preview --force
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
            flutter-version: '3.19.6' # Specify the Flutter version explicitly
      - name: Set up Git identity
        run: |
          git config --local user.name  ${{ github.actor }}        
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Create gh-pages branch
        run: |
          # Copy files from preview branch
          git fetch origin
          git checkout gh-pages
          git reset --hard origin/preview
      - name: Flutter web build
        run: |
          flutter build web
          ls ./build/web
      - name: Copy build to gh-pages branch
        run: |
          # Print contents of build/web directory before copying
          ls -l build/web
    
          # Check if build/web directory exists and is not empty
          if [ -d "build/web" ] && [ "$(ls -A build/web)" ]; then
            find . -mindepth 1 -maxdepth 1 | grep -v -E "^./(build|\.git)$" | xargs rm -rf
            ls -a ./build
            cp -r build/web/* .
            rm -rf ./build
            git add .
            git commit -m "Deploying to gh-pages"
            git push origin gh-pages --force
          else
            echo "No files found in build/web directory. Skipping deployment to gh-pages."
          fi